{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction to OpenRefine for the Humanities and Social Sciences","text":"<p>This session will introduce participants to OpenRefine, a powerful, free and open source tool to work with large datasets. We will quickly work through how to use OpenRefine to effectively clean and format tabular data while automatically tracking any changes. </p> <p>This session is suitable for beginners with no prior knowledge of OpenRefine. There are no prerequisite coding skills. While the examples and data used will be aimed at the Humanities and Social Sciences community, the session is open to anyone and everyone interested in learning about OpenRefine.</p>"},{"location":"#learning-outcomes","title":"Learning outcomes","text":"<p>Through this short introductory lesson, you will learn:</p> <ol> <li>What OpenRefine is and when to use it;</li> <li>How to create, import and export projects in OpenRefine; </li> <li>How to use facets and clusters to identify typos and mistakes in your data;</li> <li>How to edit and transform your data; and,</li> <li>How to save your work and export your script. </li> </ol> <p>This lesson is an adaptation of the Data Carpentry course \"OpenRefine for Social Science Data.\"</p>"},{"location":"clusters/","title":"Clusters and Clustering in OpenRefine","text":"<p>Clustering is another powerful way to identify errors in your data. </p> <p>Clustering refers to the process of finding groups of values that could be alternative representations of the same thing; for example, \u201cNew York\u201d and \u201cnew york\u201d, or \u201cG\u00f6del\u201d and \u201cGodel.\u201d In this way, clustering is a great way to identify and clean misspelled or mistyped entries in your data. </p> <p>OpenRefine has a number of built-in clustering algorithms - feel free to play around with them and see what kinds of clusters come up.</p> <p>You can access the clustering function by clicking the button <code>Cluster</code> in the top right hand corner of the facet box.</p> Cluster button appears inside the text facet <p>In the primary_genre text facet we created earlier, click the <code>Cluster</code> button. A pop-up window will appear. Towards the top of the window, you will find dropdown menus for the clustering method and keying function; for this exercise, we will start by using the default (Key collision and Fingerprint, respectively) but feel free to try different combinations and see if different clusters emerge later on.</p> Pop up window for clustering <p>Practice</p> <p>Select the <code>cluster</code> button in the middle of the window. What clusters appear? </p> Solution <p>You should see four blocks of genre titles:</p> <ul> <li>Drma &lt;-&gt; drma</li> <li>Sci-Fi &lt;-&gt; sci-fi</li> <li>Comedy &lt;-&gt; comedy</li> </ul> <p>Select the box to merge all, and then press <code>Merge selected &amp; re-cluster</code>. It should not return anymore clusters. </p> <p>Practice</p> <p>Now, play around with the keying function and clustering method options. What other clusters appear, if any?</p> Solution <p>The combination of Key collision and Metaphone3 should return the following cluster:</p> <ul> <li>Drama &lt;-&gt; Drma</li> </ul> <p>Practice</p> <p>Now look through the text facet again - are there any errors that we not caught? </p> Solution <p>The various clustering functions will likely not have caught the following errors: </p> <ul> <li>comedians</li> <li>science fiction</li> </ul> <p>These are two far away from the other genre titles, even though they refer to the same thing, and so won't be grouped in the clustering functions. These will have to be edited manually in the text facet box. Edit these entries as Comedy and Sci-Fi, respectively. </p>"},{"location":"facets/","title":"Using Facets in OpenRefine","text":"<p>OpenRefine includes a number of functions useful for cleaning and sorting data. In this lesson, we will explore how and when to use various facets, clustering techniques, and transformations. </p>"},{"location":"facets/#text-facets","title":"Text facets","text":"<p>Facets are a useful (and powerful!) tool within OpenRefine for getting a big picture understanding of your data. Facetting groups all like values in a column together, and allows you to filter and edit those values en masse. Facets can also help you visualize your data. </p> <p>You can access the facetting options by clicking on the down arrow beside a variable title and then hovering over the <code>Facet</code> heading. </p> Dropdown menu shows facet options <p>The first facet option you should see is the <code>Text facet</code> option. A text facet groups all the identical text values in a column and creates a list in a box in the left margin with the unique text values and the number of times eaach value appears in the faceted column. </p> The text facet for primary_genre <p>Practice</p> <p>Use a text facet on the primary_genre column. You should see a box appear in the left hand margin, labelled primary_genre with a list of the genres included in the primary genre variable column. Take a look at it. Do you notice any errors or issues?  </p> Solution <p>You should see a number of mistyped or differently labelled genre titles. Hover over the \"Documntary\" line. You should see an option to edit the line appear. Click on it, and correct the mispelling. </p> <p>Leave the other mispelled titles for now, we'll find other ways to correct them.</p>"},{"location":"facets/#other-facets","title":"Other facets","text":"<p>In addition to the text facet, OpenRefine also supports:</p> <ul> <li>Numeric facets</li> <li>Timeline/date/ facets</li> <li>Scatterplot facets</li> <li>Custom facets (e.g. word facets, text length facets, duplicate facets)</li> </ul> <p>Timeline facets work much the same way as text facets: unique values are grouped together, and then listed along with the number of times that they appear in the column. </p> <p>Numeric and scatterplot facets, on the other hand, display graphs instead of lists. Scatterplots, moreover, allow you to visualise the values of a pair of numeric columns, and to filter data by two-value combinations. </p> <p>Faceting is just one way to identify and correct errors. OpenRefine also allows us to use transformations and clustering to do that. </p>"},{"location":"filtering/","title":"Filtering and Sorting in OpenRefine","text":"<p>OpenRefine includes a set of functions that let you sort, filter, and exclude data. These tools allow to focus in on a subset of your data.</p>"},{"location":"filtering/#filtering","title":"Filtering","text":"<p>Filtering in OpenRefine is a simple process. You can access the <code>Text filter</code> function by clicking the down arrow beside the variable title. </p> The text filter function is found in the dropdown menu <p>Practice</p> <p>Try filtering the primary_genre column. Select the <code>Text filter</code> option. You should see a filter box appear in the left hand marigin of your window. Start by typing \"fa\". What happens? </p> Solution <p>The text filter works in real time as you type. Once you've typed \"fa\" you should see your data restricted to only the family and fantasy genres. You can further narrow it down by typing more. </p> <p>Continue typing ntasy (so that you now have \"fantasy\"). You should now only have 32 entries on your browser window. You have succesfully filtered your data by fantasy genre!</p> <p>Now, remove the filter before moving on to the next operations. </p> <p>How is filtering different from faceting?</p> <p>These two operations look very similar, but have slightly different functions. Simply put, faceting will give you an overview of all the data selected, while filtering will select out a subset of the data to work on. </p>"},{"location":"filtering/#including-and-excluding","title":"Including and excluding","text":"<p>Excluding variable values is another fast way to subset your data. You can do this by hovering your cursor over an entry in a facet. When you do, options to edit and include or exclude will appear. </p> The include button appears inside the facet <p>Practice</p> <p>Choose any one of the entries in the primary_genre text facet. Hover over it, and click on <code>include</code> when it appears. </p> <p>You should see that your data is now restricted to just that one genre. Include a second genre - what happens now? </p> Solution <p>When you include a second genre, your data will be filtered down to those two genres. The first will not be unselected.</p> <p>There are two options to clearing the filter put on by including genres. First, you can click on <code>exclude</code> beside the entry in the text facet. Try doing this to one of the entries you included earlier. </p> The exclude button appears inside the facet beside labels that have been included <p>Alternatively, you can click on the <code>reset</code> button in the top right hand corner of the facet box. Hitting this button will reset any and all inclusions you've made.</p>"},{"location":"filtering/#sorting","title":"Sorting","text":"<p>Like filtering, sorting data is done through the column's dropdown menu (found by clicking the down arrow beside the title). </p> <p>When you click on <code>Sort...</code> a pop up window will appear. In that window, you will get the choice to sory by text, numbers, dates, or booleans (true or false). You will also be able to choose where the blanks and errors should go in the sorted results. </p> The dropdown menu includes options for sorting <p>Let's try sorting by text and by numbers. </p> <p>First, sort primary_genre by text. When you select <code>text</code> in the sorting pop up window, you will have the option of whether to sort from a to z, or z to a. Leave this at the default of a to z. </p> <p>Second, sort run_time by number. Sort it from largest first. You'll also see an option to <code>sort by this column alone</code>. Leave it blank in this case, in order to sort the data by both run_time and primary_genre. You should now see the longest Action movie at the top of your table (The Tiger and the Female, at 180 minutes).</p> <p>When you return to a column that you have already sorted, your options under <code>Sort...</code> will be slightly different. Now, you will see an option to <code>Sort...</code> (which will allow you to change your sorting options), <code>Reverse</code> (which will reverse the direction of the preexisting sort) , and <code>Remove sort</code> (this one is pretty self-explanatory).</p> When you select \"sort\" on an already sorted column, the options change <p>Practice</p> <p>Let's say we want to find out what the shortest movie in the dataset it, irrespective of genre. </p> <p>To do this, first navigate to the dropdown menu for run_time and select <code>Sort...</code> and then <code>Reverse</code>. Next, remove the sort on primary_genre.</p> <p>What is the shortest movie? </p> Solution <p>To remove the sort on primary_genre, you will need to navigate to the column dropdown menu, then to <code>Sort...</code>, and then finally to select <code>Remove sort</code>.</p> <p>When you've done all that, you should find that the drama film Szpieg is the shortest movie, at only 25 minutes. </p>"},{"location":"land_acknowledgement/","title":"Land Acknowledgement","text":"<p>Before we start the lesson, let's take a moment to think about the land on which we are learning and teaching. </p> <p>I'm teaching this lesson from Edmonton, Alberta. The city of Edmonton is located on Treaty Six Territory. </p> <p>This territory has been a home, a trading post, a travelling route, and more for generations of Indigenous Peoples. In particular, the n\u00eahiyaw (Nay-hee-yow) / Cree, Dene (Deh-neyh), Anishinaabe (Ah-nish-in-ah-bay) / Saulteaux (So-toe), Nakota Isga (Na-koh-tah ee-ska) / Nakota Sioux (Na-koh-tah sue), and Niitsitapi (Nit-si-tahp-ee) / Blackfoot peoples have lived, learned, and work in this place for centuries. This land is also a homeland for the M\u00e9tis, and the home of one of the largest communities of Inuit south of the 60th parallel. </p> <p>In this map from native-land.ca you can see a pin representing Edmonton.</p> Edmonton is located within Treaty 6 Territory <p>Land acknowledgements are just one small piece of the work of reconciliation and must be undertaken in conjunction with other works. Acknowledging the land provides a foundation for recognizing Indigenous sovereignty and self-determination, for respecting Indigenous culture and language, and for committing to reconciliation and allyship. </p>"},{"location":"numbers/","title":"Working with Numbers in OpenRefine","text":"<p>While OpenRefine is a really powerful for cleaning text data - through facets, transformations, and clusters - it can also be used effectively to deal with numbers. </p> <p>When a table is imported into OpenRefine, all columns are automatically considered to be text. To fix this, we can use transformations (as we did before). </p> <p>As a reminder, we can transform text values into numbers by...</p> <ol> <li>Navigating to the dropdown menu for the column;</li> <li>Navigating to <code>Edit cells</code>;</li> <li>Navigating to <code>Common transforms</code>; and</li> <li>Selecting <code>to number</code>.</li> </ol> <p>Transform the remainder of the number columns that are formatted as text (run_time, ave_rating, num_votes). Once they are formatted to numbers, you should see the values turn green and change from left-justified to right-justified. </p> <p>Practice</p> <p>Now that we have multiple numeric columns, we can use a scatterplot facet. Let's use one to look at the relationship between movie rating and movie length.</p> <p>To do this, navigate to the run_time column, and click on the down arrow to access the drop down menu. From there, select Facet and then Scatterplot facet.... This will open a pop up window with a number of scatterplot option. When you hover over each, you should see a description of the variables appear. Which one should we select?</p> Solution <p>You want to select the graph that shows run_time(x) vs ave_rating (y).</p> <p>What does the scatterplot tell us about the relationship between movie run time and movie rating? </p> Scatterplot of run time and average rating"},{"location":"scripts/","title":"Saving your Work in OpenRefine","text":"<p>Now that we've done all this work cleaning our data, we need to save it. As we saw when we learned about the Undo/Redo tab, OpenRefine keeps a log of every change we make to the dataset. This log is saved as a JSON (JavaScript Object Notation) file, and can be exported and applied to other files/projects. </p>"},{"location":"scripts/#exporting-and-saving-your-script","title":"Exporting and saving your script","text":"<p>To export your script, you need to navigate to the Undo/Redo section of the tab in the left hand margin. Once there, click on <code>Extract...</code>. That will prompt a pop up window with the script of all changes made to the data. From there, click <code>Export</code>, and your script should automatically download as a JSON.</p> You can save your script by exporting it <p>If you were starting a new project, and wanted to use this same script (or any other that you had exported and saved), you would simply click on <code>Apply...</code> instead of <code>Extract...</code>. You would then get a pop up window with the option to either copy and paste a script or upload a script file. </p>"},{"location":"scripts/#exporting-and-saving-your-data","title":"Exporting and saving your data","text":"<p>OpenRefine allows you to save your data as a new file (leaving your original data untouched) by exporting. To do so, you will need to navigate to the <code>Export</code> button in the top right hand corner of your browser window. </p> <p>From there, you will be able to select the format in which you would like your data to be exported. There are several format options to choose from, but I would genreally recommend choosing CSV (comma-separated values). </p> <p>Depending on your browser settings, your new file should automatically download. OpenRefine will name it after your project. </p> <p>You also have the option to save your project. To do this, select OpenRefine project archive to file from the dropdown menu under <code>Export</code>. When you choose this option, OpenRefine will create one compressed file with all your data as well as all the information about the changes and transformations you did to the data. You can use this file as a project backup, or use it to share work with a collaborator, or even just use it to work on the same project on a different computer. </p> <p>You can import this project back into OpenRefine by clicking on <code>Open...</code> in the upper right hand corner, then clicking <code>Import Project</code> from the dropdown menu, and finally selecting the compressed (tar.gz) file. </p>"},{"location":"starting/","title":"Getting Started in OpenRefine","text":"<p>What is OpenRefine? OpenRefine is a free, open-source tool for cleaning and working with messy data. </p> <p>OpenRefine is user-friendly and powerful. It is a great tool for that first step of research analysis - data cleaning. Here are a few reasons to use it: - OpenRefine automatically logs all actions; - OpenRefine includes easy undo and redo tools; - OpenRefine never modifies your original data, but rather saves your work to a new file; - OpenRefine works with small and large(ish) datasets of up to 100,000 rows;</p> <p>OpenRefine is also a great tool for working with data that requires privacy considerations. OpenRefine works by running a small server on your computer, meaning that all data is kept on your personal computer. It does not require an internet connection, even though it does open a browser window to allow easy interaction with the software. </p>"},{"location":"starting/#download-openrefine-and-the-data","title":"Download OpenRefine and the data","text":"<p>Download OpenRefine by following the instructions on their website: openrefine.org/download.</p> <p>Once you have downloaded OpenRefine, start by launching it from your applications. It should open as a window or tab in your default browseer. If it does not work, you can try navigating to http://127.0.0.1:3333/ or http://localhost:3333 to launch the program. </p> <p>We will be using data from IMDB's collection of non-commercial datasets on movies. This data has been messed up on purpose - to give you something to fix in this lesson! </p> <ul> <li>Click here to download it: messy_movies.csv</li> </ul>"},{"location":"starting/#creating-a-project","title":"Creating a project","text":"<p>Once OpenRefine is launched, you will see an options to create, open, or import projects. For this lesson, we will be creating a new project using our \"messy_movies\" data. Our data is in a csv (comma separated values) format, but OpenRefine will also accept data in tsv (tab separated values), xls, xlsx, JSON, and XML formats.</p> <p>Click on <code>Create Project</code> and then on <code>This Computer</code>. From there, click on <code>Choose Files</code> and navigate to the messy_movies.csv file you downloaded earlier, and finally click <code>Next &gt;&gt;</code> to upload the data into OpenRefine.</p> ){width=800}     Create project with data from this computer <p>After uploading, OpenRefine will show you a preview of the data, giving you a chance to correct any issues in the upload before creating your project. </p> The preview page before creating a project <p>This is a great opportunity to double check that the file type was correctly identified, that your data was correctly parsed, and that all your variables are correctly titled. </p> <p>If everything loks right to you, you can click the <code>Create project &gt;&gt;</code> buton in the upper right corner. You now have a OpenRefine project!</p>"},{"location":"transformations/","title":"Using Transformations in OpenRefine","text":"<p>Transforming data can also be a quick way to correct improperly formatted data all at once. OpenRefine includes a set of common transformations that you can use, and also allows for custom transformations. The common transformations include trimming leading and trailing whitespace, changing the case of text, and even changing the data type.  </p> The dropdown menu includes several transformation options <p>Practice</p> <p>Let's say that we're interested in the distribution of movie releases over years. Recall that numeric facets will produce graphs - specifically, histograms. Hover over the arrow next to the year title, navigate to <code>Facet</code> and then to <code>Numeric facet</code>. What happens? </p> Solution <p>You will not be able to use a numeric facet on the year column. While the facet command will produce a facet box in the left hand margin, it will be empty. This is because the values in year are not formatted as numbers. </p> <p>To fix this problem, you will need to transform the year values into numbers. To do this, follow the procedure: <code>Facet</code> to <code>Common transforms</code> to <code>To number</code>. When you've transformed the values into numbers, the numeric facet you made earlier should auto-populate. You'll also notice that the values in the year column are now green.</p>"},{"location":"transformations/#trimming-leading-and-trailing-whitespace","title":"Trimming leading and trailing whitespace","text":"<p>The transformations function can also be used to trim leading and trailing whitespaces. This is another one of the easy common transformations OpenRefine includes. Try it out now on the movie_title column. You should get a pop-up message confirming that you've changed 66 rows.</p> Trimming whitespace is a common transformation"},{"location":"transformations/#other-transformations","title":"Other transformations","text":"<p>We can also use transformations to convert and clean data easily. For example, we can use transformations to turn our sets of writers\u2019 IDs and names into clear lists of individual items. To do so, we will first need to remove the square brackets and quotation marks.</p> <p>This task will require using a custom transformation. Start by clicking the down arrow beside the writer_names variable title. Choose <code>Edit cells</code> and then <code>Transform</code>. This will open a pop up window for custom transformation. </p> You can also write your own custom transformations <p>This window contains a text box, where you can type a General Refine Expression Language (GREL) and use it to transform your data. </p> <p>Our first step will be to remove all the square brackets. For this, type value.replace(\"[\",\"\") and click ok. This GREL expression is telling OpenRefine to take every \"[\" and replace it with \"\" (nothing). </p> <p>Practice</p> <p>Use this same technique to remove the other square brackets (]) and the quotation marks (').</p> Solution <p>You should use the following GREL expressions:</p> <ul> <li>value.replace(\"]\",\"\")</li> <li>value.replace(\"'\",\"\")</li> </ul> <p>After completing these two transformation, each row of writers' names should be a clean list, without any square brackets or quotation marks. </p>"},{"location":"undo-redo/","title":"Using Undo and Redo in OpenRefine","text":"<p>It's not uncommon to make a mistake, or to change your mind about something, when cleaning data. With this is mind, OpenRefine provides a very easy way to undo and redo any and all changes you've made. </p> <p>In the left hand margin, you should see a tab labelled Undo/Redo. Click on it. </p> The undo/redo tab is in the left hand margin <p>Every operation you've run so far will be listed in this tab. To undo changes, all you have to do is click on a previous step. To redo that change, just click on it. </p> <p>Practice</p> <p>Try undoing all the transformations you did to the writers_name variable. Select a step before those changes and observe what happens to the variable values. </p> <p>Now, re-select the most recent change. Your data should go back to how it was. </p>"}]}